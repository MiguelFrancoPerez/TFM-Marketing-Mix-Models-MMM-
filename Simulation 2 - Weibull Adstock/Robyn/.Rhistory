if(C>0){
for (c in 1:sim_data$C_used){
lines(x=t_ind[-(1:L)], y=stan_fit$ct_impact[,,c][-(1:L)], type = "l", col=ct_dark_colors[c], lwd= 2)
}
}
# Y vs. Covariates
#####################
for(m in 1:M){
plot(covariateplot(Y=simulation$`y_sim[1]`, covariate = simulation[,paste0("x[",m,"]")], labelY="Y",labelcov =paste0("x[",m,"]")))
}
# DESCRIPTIVE
###############
df<-simulation[-c(1:3),c(7,9:12)]
descr<-as.data.frame(describe(df, quant=c(0.25,0.75), IQR=TRUE)[,-c(1)])
round(t(descr),2)
# DENSITY + HISTOGRAMS
########################
df<-data.frame(Y=simulated_data,x,ct)
numeric_data <- df[sapply(df, is.numeric)]
group_y <- "Y"
group_x <- apply(expand.grid(c("x"), seq(1:M)), 1, function(x) paste0(x[1], x[2]))
group_ct <- apply(expand.grid(c("ct"), seq(1:C_used)), 1, function(x) paste0(x[1], x[2]))
ncol_common <- max(length(group_x), length(group_ct))
long_y <- melt(df[, group_y, drop = FALSE], id.vars = NULL)
long_x <- melt(df[, group_x, drop = FALSE], id.vars = NULL)
long_ct <- melt(df[, group_ct, drop = FALSE], id.vars = NULL)
py <- ggplot(long_y, aes(x = value)) +
geom_histogram(aes(y = ..density..), fill = "gray80", color = "black", bins = 30) +
geom_density(color = "black", size = 1.2) +
labs(title = "Revenue", x = "Revenue (u.m.)", y = "Density") +
theme_minimal()
# X variables
px <- ggplot(long_x, aes(x = value)) +
geom_histogram(aes(y = ..density.., fill = variable), color = "black", bins = 30) +
geom_density(aes(color = variable), size = 1.1) +
scale_fill_manual(values = x_light_colors) +
scale_color_manual(values = x_dark_colors) +
facet_wrap(~ variable, scales = "free", ncol = ncol_common) +
labs(title = "Advertising Spend", x = "Spend (u.m.)", y = "Density") +
theme_minimal() +
theme(legend.position = "none")
# Ct variables
pct <- ggplot(long_ct, aes(x = value)) +
geom_histogram(aes(y = ..density.., fill = variable), color = "black", bins = 30) +
geom_density(aes(color = variable), size = 1.1) +
scale_fill_manual(values = ct_light_colors) +
scale_color_manual(values = ct_dark_colors) +
facet_wrap(~ variable, scales = "free", ncol = ncol_common) +
labs(title = "Control Variables", x = "Value", y = "Density") +
theme_minimal() +
theme(legend.position = "none")
(py | pct) / px
# CORRELATION
##################
cp<-list()
df2<-data.frame(df,
t=simulation$t_ind,
mes=simulation$mes)
counter<-0
for(method in c("pearson", "spearman", "kendall")){
counter<-counter+1
cor_matrix <- cor(df2, method=method)
var_names<-colnames(df2)
cor_melted <- melt(cor_matrix)
cor_melted$Var1 <- factor(cor_melted$Var1, levels = rev(var_names))  # y-axis
cor_melted$Var2 <- factor(cor_melted$Var2, levels = var_names)  # x-axis
cp[[counter]]<-ggplot(cor_melted, aes(x = Var2, y = Var1, fill = value)) +
geom_tile(color = "white") +
geom_text(aes(label = round(value, 1)), size = 1.75, color = "black") +
scale_fill_gradient2(
low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1, 1), space = "Lab",
name=NULL
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
panel.grid.major = element_blank(),
legend.title = element_blank(),
legend.text = element_text(size = 6),   # Tamaño del texto en la barra
legend.key.height = unit(0.3, "cm"),    # Altura de los bloques de la barra
legend.key.width = unit(0.3, "cm")
) +
coord_fixed() +
labs(title = paste0("Correlation (", method,")"), x = "", y = "", size = 0.6)
}
cp[[1]]|cp[[2]]|cp[[3]]
# AUTOCORRELATION
par(mfrow=c(5,2),mar=c(2,4,1,2))
for (var in colnames(df)){
acf(df[,var], main="", ylim=c(-1,1)); title(main =var, line = 0.3, cex.main=0.9)
pacf(df[,var], ylab="PACF", ylim=c(-1,1), main=""); title(main =var, line = 0.3, cex.main=0.9)
}
t_ind <- seq_len(Semanas.Efect+L)-(L+1)
#X vs. HILLADSTOCK
#################
par(mfrow=c(M+1,1), mar=c(2, 8, 1, 15))
plot(x=t_ind[-(1:L)], y=stan_fit$Y_marketing[-(1:L)],  type="l", col="darkgreen", lwd= 3, xlab="", ylim=c(0,max(x, stan_fit$Y_marketing[-(1:L)])), ylab=paste0("Aggregated \n monetary units (m.u.)"), main="Advertising Effects",
, cex.lab=0.75)
abline(v=t_ind[year_marks], col="gray", lty=2)
for (i in 1:M){
lines(x=t_ind[-(1:L)], y=stan_fit$x_hilladstocked[,,i][-(1:L)], type = "l", col=i+1, lwd= 2)
}
legend("topright",
inset = c(-0.4, 0),  # mover hacia afuera (derecha)
legend = "Advertising Revenue \n Σ hilladstock ( x[m] )",
col = "darkgreen",
lwd = 3,
bty = "n",
xpd = NA,
cex = 1)
for (i in 1:M){
plot(x=t_ind[-(1:L)], y=c(simulated_data[-(1:L)]),  type="l", col=NA, lwd= 3, xlab="", ylim=c(0,max(stan_fit$ct_impact[,,][-(1:L)], stan_fit$x_hilladstocked[,,][-(1:L)])), ylab=paste0("Media ",i, "\n monetary units (m.u.)",cex.lab= 0.75))
abline(v=t_ind[year_marks], col="gray", lty=2)
lines(x=t_ind[-(1:L)], y =x[-(1:L),i], type = "l", col=i+1, lwd= 1.5, lty=2)
lines(x=t_ind[-(1:L)], y=stan_fit$x_hilladstocked[,,i][-(1:L)], type = "l", col=i+1, lwd= 2)
legend("right",
inset = c(-0.45, 0),  # mover hacia afuera (derecha)
legend = c(paste0("Revenue attributed to Media", i,"\n hilladstock ( x[",i,"] )"), paste0("Spend on Media", i,"\n x[",i,"]") ),
col = c(i+1, i+1),
lwd = c(2.3, 1),
lty=c(1,2),
bty = "n",
xpd = NA,
cex = 1)
}
#LOG-SCALE
par(mfrow=c(M+1,1), mar=c(2, 4, 1, 18))
for (i in 1:M){
plot(x=t_ind[-(1:L)], y=c(simulated_data[-(1:L)]),  type="l", col=NA, lwd= 3, xlab="", ylim=c(0,max(log(stan_fit$ct_impact[,,][-(1:L)]), log(stan_fit$x_hilladstocked[,,][-(1:L)]))), ylab=paste0("Media ",i))
abline(v=t_ind[year_marks], col="gray", lty=2)
lines(x=t_ind[-(1:L)], y =log(x[-(1:L),i]), type = "l", col=x_light_colors[i], lwd= 1.5)
lines(x=t_ind[-(1:L)], y=log(stan_fit$x_hilladstocked[,,i][-(1:L)]), type = "l", col=x_dark_colors[i], lwd= 2)
legend("right",
inset = c(-0.5, 0),  # mover hacia afuera (derecha)
legend = c(paste0("Log-Revenue attributed to Media", i), paste0("Log-Spend on Media", i) ),
col = c(i+1, i+1),
lwd = c(2.3, 1),
lty=c(1,2),
bty = "n",
xpd = NA,
cex = 1)
}
#C
#################
if(C>0){
par(mfrow=c(M+1,1), mar=c(2, 4, 1, 18))
for (i in 1:C){
plot(x=t_ind[-(1:L)], y=c(simulated_data[-(1:L)]),  type="l", col=NA, lwd= 3, xlab="", ylim=c(0,max(stan_fit$ct_impact[,,][-(1:L)], stan_fit$x_hilladstocked[,,][-(1:L)])), ylab=paste0("Control ",i), main="Control Variables")
abline(v=seq(48, length(t_ind[-(1:L)]), by=48), col="gray", lty=2)
lines(x=t_ind[-(1:L)], y =ct[-(1:L),i], type = "l", col=ct_light_colors[i], lwd= 1.5, lty=2)
lines(x=t_ind[-(1:L)], y=stan_fit$ct_impact[,,i][-(1:L)], type = "l", col=ct_dark_colors[i], lwd= 2)
}
}
legend("right",
inset = c(-0.44, 0),  # mover hacia afuera (derecha)
legend = c(paste0("Revenue attributed to Control", i), paste0("Value of Control", i,"\n c[",i,"]") ),
col = c("pink", i+5),
lwd = c(2.3, 1),
lty=c(1,2),
bty = "n",
xpd = NA,
cex = 1)
# LOG-SCALE
par(mar=c(4, 4, 1, 18))
if(C>0){
for (i in 1:C){
plot(x=t_ind[-(1:L)], y=c(simulated_data[-(1:L)]),  type="l", col=NA, lwd= 3, xlab="t", ylim=c(0,max(log(stan_fit$ct_impact[,,][-(1:L)]), log(stan_fit$x_hilladstocked[,,][-(1:L)]))), ylab=paste0("Control ",i))
abline(v=seq(48, length(t_ind[-(1:L)]), by=48), col="gray", lty=2)
lines(x=t_ind[-(1:L)], y=log(ct[-(1:L),i]), type = "l", col=ct_light_colors[i], lwd= 1.5)
lines(x=t_ind[-(1:L)], y=log(stan_fit$ct_impact[,,i][-(1:L)]), type = "l", col=ct_dark_colors[i], lwd= 2)
}
}
legend("right",
inset = c(-0.5, 0),  # mover hacia afuera (derecha)
legend = c(paste0("Log-Revenue attributed to Control", i), paste0("Log-Value of Control", i,"\n c[",i,"]") ),
col = c("pink", i+5),
lwd = c(2.3, 1),
lty=c(1,2),
bty = "n",
xpd = NA,
cex = 1)
# SATURATION CURVES
#######################################
x_rang<-seq(0,max(stan_fit$x_hilladstocked[,,][-(1:L)]),max(x)*0.01)
Hill<- function(x, alpha, gamma, beta=1){
beta*1/(1+ (gamma/x)^alpha)
}
par(mfrow=c(1,M),mar = c(8, 5, 5, 2))  # Increase the bottom margin (first value)
for (i in 1:M){
y_rang<-Hill(x=x_rang, beta=params_list$beta_x[i], alpha=params_list$alpha_x[i], gamma = params_list$gamma_x[i])
plot(x=x_rang, y = y_rang, type = "l", main = paste0("Saturation Hill function \n", "Media x[", i,"]"), xlab=paste0("adstock( x[", i, "] )"), ylab="Revenue", xlim=c(0, max(x_rang)), ylim=c(0,max(params_list$beta_x*1.2)), lwd=3, col=x_dark_colors[i])
abline(a = 0, b = 1, col = "brown", lwd = 2)
x_fill <- seq(par("usr")[1], par("usr")[2], length.out = 100)
y_fill <- x_fill  # Como y = x
polygon(c(x_fill, rev(x_fill)), c(y_fill, rep(par("usr")[3], length(y_fill))),
col = rgb(0.6, 0.2, 0.1, 0.5), border = NA)
abline(h=params_list$beta_x[i], col="darkgrey")
rect(min(stan_fit$x_hilladstocked[,,i][-(1:L)]), par("usr")[3], max(stan_fit$x_hilladstocked[,,i][-(1:L)]), par("usr")[4], col = rgb(0, 0, 1, 0.15), border = NA)
rect(quantile(stan_fit$x_hilladstocked[,,i][-(1:L)],probs=0.25), par("usr")[3], quantile(stan_fit$x_hilladstocked[,,i][-(1:L)],probs=0.75), par("usr")[4], col = rgb(0, 0, 1, 0.2), border = NA)
title(sub = paste0("α[", i, "] = ", params_list$alpha_x[i],
" \n ɣ[",i,"] = ", params_list$gamma_x[i],
" \n β[",i,"] = ", params_list$beta_x[i]), line = 6)
}
legend("topright",
legend=c("Inneficient Area (Adstocked < Revenue)","IQR(x)","Range(x)"),
fill = c(rgb(0.6, 0.2, 0.1, 0.5),rgb(0, 0, 1, 0.2+0.15),rgb(0, 0, 1, 0.15)),
border = c("red",NA,NA),
cex=0.75, xpd=NA)
#KPI DESGLOSADO
#################
par(mfrow=c(3,1), mar=c(4, 4, 1, 12))
# KPI + Y_signal
plot(x=t_ind[-(1:L)], y=stan_fit$Y_signal[-(1:L)],  type="l", col="black", lwd= 3, xlab="", ylim=c(0,max(x, simulated_data)), ylab="KPI + Y_signal")
abline(v=t_ind[year_marks], col="gray", lty=2)
lines(x=t_ind[-(1:L)], y=c(simulated_data[-(1:L)]),  type="l", col="red", lwd= 2)
legend("right",
inset = c(-0.27, 0),  # mover hacia afuera (derecha)
legend = c("Observed revenue \n Y", "Signal" ),
col = c("red", "black"),
lwd = 2,
lty=1,
bty = "n",
xpd = NA,
cex = 1)
# KPI + Second  Level Components PLOT
plot(x=t_ind[-(1:L)], y=stan_fit$Y_signal[-(1:L)],  type="l", col="black", lwd= 3, xlab="", ylim=c(0,max(x, simulated_data)), ylab="KPI + Second Level Components")
abline(v=t_ind[year_marks], col="gray", lty=2)
if(C>0){
lines(x=t_ind[-(1:L)], y=stan_fit$Y_control[,-(1:L)], type = "l", col="pink", lwd= 2)
}
lines(x=t_ind[-(1:L)], y=stan_fit$Y_temporal[,-(1:L)],  type="l", col="darkblue", lwd= 2)
lines(x=t_ind[-(1:L)], y=stan_fit$Y_marketing[,-(1:L)], type = "l", col="darkgreen", lwd= 2)
legend("right",
inset = c(-0.27, 0),  # mover hacia afuera (derecha)
legend = c("Signal", "Temporal effects", "Advertising effects", "Controls' effect" ),
col = c("black", "darkblue", "darkgreen", "pink"),
lwd = c(3, rep(2,3)),
lty=1,
bty = "n",
xpd = NA,
cex = 1)
# KPI + Basic Components PLOT
plot(x=t_ind[-(1:L)], y=c(simulated_data[-(1:L)]),  type="l", col="black", lwd= 3, xlab="", ylim=c(0,max(x, simulated_data)), ylab="KPI + Basic Components")
abline(v=t_ind[year_marks], col="gray", lty=2)
lines(x=t_ind[-(1:L)], y=rep(params_list$beta_0,Semanas.Efect),  type="l", col="cyan", lwd= 2)
lines(x=t_ind[-(1:L)], y=trend,  type="l", col="blue", lwd= 2)
lines(x=t_ind[-(1:L)], y=seasonal,  type="l", col="purple", lwd= 2)
for (i in 1:M){
lines(x=t_ind[-(1:L)], y=stan_fit$x_hilladstocked[,,i][-(1:L)], type = "l", col=x_dark_colors[i], lwd= 2)
}
if(C>0){
for (c in 1:sim_data$C_used){
lines(x=t_ind[-(1:L)], y=stan_fit$ct_impact[,,c][-(1:L)], type = "l", col=ct_dark_colors[c], lwd= 2)
}
}
# Y vs. Covariates
#####################
for(m in 1:M){
plot(covariateplot(Y=simulation$`y_sim[1]`, covariate = simulation[,paste0("x[",m,"]")], labelY="Y",labelcov =paste0("x[",m,"]")))
}
# DESCRIPTIVE
###############
df<-simulation[-c(1:3),c(7,9:12)]
descr<-as.data.frame(describe(df, quant=c(0.25,0.75), IQR=TRUE)[,-c(1)])
round(t(descr),2)
# DENSITY + HISTOGRAMS
########################
df<-data.frame(Y=simulated_data,x,ct)
numeric_data <- df[sapply(df, is.numeric)]
group_y <- "Y"
group_x <- apply(expand.grid(c("x"), seq(1:M)), 1, function(x) paste0(x[1], x[2]))
group_ct <- apply(expand.grid(c("ct"), seq(1:C_used)), 1, function(x) paste0(x[1], x[2]))
ncol_common <- max(length(group_x), length(group_ct))
long_y <- melt(df[, group_y, drop = FALSE], id.vars = NULL)
long_x <- melt(df[, group_x, drop = FALSE], id.vars = NULL)
long_ct <- melt(df[, group_ct, drop = FALSE], id.vars = NULL)
py <- ggplot(long_y, aes(x = value)) +
geom_histogram(aes(y = ..density..), fill = "gray80", color = "black", bins = 30) +
geom_density(color = "black", size = 1.2) +
labs(title = "Revenue", x = "Revenue (u.m.)", y = "Density") +
theme_minimal()
# X variables
px <- ggplot(long_x, aes(x = value)) +
geom_histogram(aes(y = ..density.., fill = variable), color = "black", bins = 30) +
geom_density(aes(color = variable), size = 1.1) +
scale_fill_manual(values = x_light_colors) +
scale_color_manual(values = x_dark_colors) +
facet_wrap(~ variable, scales = "free", ncol = ncol_common) +
labs(title = "Advertising Spend", x = "Spend (u.m.)", y = "Density") +
theme_minimal() +
theme(legend.position = "none")
# Ct variables
pct <- ggplot(long_ct, aes(x = value)) +
geom_histogram(aes(y = ..density.., fill = variable), color = "black", bins = 30) +
geom_density(aes(color = variable), size = 1.1) +
scale_fill_manual(values = ct_light_colors) +
scale_color_manual(values = ct_dark_colors) +
facet_wrap(~ variable, scales = "free", ncol = ncol_common) +
labs(title = "Control Variables", x = "Value", y = "Density") +
theme_minimal() +
theme(legend.position = "none")
(py | pct) / px
# CORRELATION
##################
cp<-list()
df2<-data.frame(df,
t=simulation$t_ind,
mes=simulation$mes)
counter<-0
for(method in c("pearson", "spearman", "kendall")){
counter<-counter+1
cor_matrix <- cor(df2, method=method)
var_names<-colnames(df2)
cor_melted <- melt(cor_matrix)
cor_melted$Var1 <- factor(cor_melted$Var1, levels = rev(var_names))  # y-axis
cor_melted$Var2 <- factor(cor_melted$Var2, levels = var_names)  # x-axis
cp[[counter]]<-ggplot(cor_melted, aes(x = Var2, y = Var1, fill = value)) +
geom_tile(color = "white") +
geom_text(aes(label = round(value, 1)), size = 1.75, color = "black") +
scale_fill_gradient2(
low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1, 1), space = "Lab",
name=NULL
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
panel.grid.major = element_blank(),
legend.title = element_blank(),
legend.text = element_text(size = 6),   # Tamaño del texto en la barra
legend.key.height = unit(0.3, "cm"),    # Altura de los bloques de la barra
legend.key.width = unit(0.3, "cm")
) +
coord_fixed() +
labs(title = paste0("Correlation (", method,")"), x = "", y = "", size = 0.6)
}
cp[[1]]|cp[[2]]|cp[[3]]
# AUTOCORRELATION
par(mfrow=c(5,2),mar=c(2,4,1,2))
for (var in colnames(df)){
acf(df[,var], main="", ylim=c(-1,1)); title(main =var, line = 0.3, cex.main=0.9)
pacf(df[,var], ylab="PACF", ylim=c(-1,1), main=""); title(main =var, line = 0.3, cex.main=0.9)
}
t_ind <- seq_len(Semanas.Efect+L)-(L+1)
#X vs. HILLADSTOCK
#################
par(mfrow=c(M+1,1), mar=c(2, 8, 1, 15))
plot(x=t_ind[-(1:L)], y=stan_fit$Y_marketing[-(1:L)],  type="l", col="darkgreen", lwd= 3, xlab="", ylim=c(0,max(x, stan_fit$Y_marketing[-(1:L)])), ylab=paste0("Aggregated \n monetary units (m.u.)"), main="Advertising Effects",
, cex.lab=0.75)
abline(v=t_ind[year_marks], col="gray", lty=2)
for (i in 1:M){
lines(x=t_ind[-(1:L)], y=stan_fit$x_hilladstocked[,,i][-(1:L)], type = "l", col=i+1, lwd= 2)
}
legend("topright",
inset = c(-0.4, 0),  # mover hacia afuera (derecha)
legend = "Advertising Revenue \n Σ hilladstock ( x[m] )",
col = "darkgreen",
lwd = 3,
bty = "n",
xpd = NA,
cex = 1)
for (i in 1:M){
plot(x=t_ind[-(1:L)], y=c(simulated_data[-(1:L)]),  type="l", col=NA, lwd= 3, xlab="", ylim=c(0,max(stan_fit$ct_impact[,,][-(1:L)], stan_fit$x_hilladstocked[,,][-(1:L)])), ylab=paste0("Media ",i, "\n monetary units (m.u.)"), cex.lab= 0.75)
abline(v=t_ind[year_marks], col="gray", lty=2)
lines(x=t_ind[-(1:L)], y =x[-(1:L),i], type = "l", col=i+1, lwd= 1.5, lty=2)
lines(x=t_ind[-(1:L)], y=stan_fit$x_hilladstocked[,,i][-(1:L)], type = "l", col=i+1, lwd= 2)
legend("right",
inset = c(-0.45, 0),  # mover hacia afuera (derecha)
legend = c(paste0("Revenue attributed to Media", i,"\n hilladstock ( x[",i,"] )"), paste0("Spend on Media", i,"\n x[",i,"]") ),
col = c(i+1, i+1),
lwd = c(2.3, 1),
lty=c(1,2),
bty = "n",
xpd = NA,
cex = 1)
}
#LOG-SCALE
par(mfrow=c(M+1,1), mar=c(2, 4, 1, 18))
for (i in 1:M){
plot(x=t_ind[-(1:L)], y=c(simulated_data[-(1:L)]),  type="l", col=NA, lwd= 3, xlab="", ylim=c(0,max(log(stan_fit$ct_impact[,,][-(1:L)]), log(stan_fit$x_hilladstocked[,,][-(1:L)]))), ylab=paste0("Media ",i))
abline(v=t_ind[year_marks], col="gray", lty=2)
lines(x=t_ind[-(1:L)], y =log(x[-(1:L),i]), type = "l", col=x_light_colors[i], lwd= 1.5)
lines(x=t_ind[-(1:L)], y=log(stan_fit$x_hilladstocked[,,i][-(1:L)]), type = "l", col=x_dark_colors[i], lwd= 2)
legend("right",
inset = c(-0.5, 0),  # mover hacia afuera (derecha)
legend = c(paste0("Log-Revenue attributed to Media", i), paste0("Log-Spend on Media", i) ),
col = c(i+1, i+1),
lwd = c(2.3, 1),
lty=c(1,2),
bty = "n",
xpd = NA,
cex = 1)
}
#C
#################
if(C>0){
par(mfrow=c(M+1,1), mar=c(2, 4, 1, 18))
for (i in 1:C){
plot(x=t_ind[-(1:L)], y=c(simulated_data[-(1:L)]),  type="l", col=NA, lwd= 3, xlab="", ylim=c(0,max(stan_fit$ct_impact[,,][-(1:L)], stan_fit$x_hilladstocked[,,][-(1:L)])), ylab=paste0("Control ",i), main="Control Variables")
abline(v=seq(48, length(t_ind[-(1:L)]), by=48), col="gray", lty=2)
lines(x=t_ind[-(1:L)], y =ct[-(1:L),i], type = "l", col=ct_light_colors[i], lwd= 1.5, lty=2)
lines(x=t_ind[-(1:L)], y=stan_fit$ct_impact[,,i][-(1:L)], type = "l", col=ct_dark_colors[i], lwd= 2)
}
}
legend("right",
inset = c(-0.44, 0),  # mover hacia afuera (derecha)
legend = c(paste0("Revenue attributed to Control", i), paste0("Value of Control", i,"\n c[",i,"]") ),
col = c("pink", i+5),
lwd = c(2.3, 1),
lty=c(1,2),
bty = "n",
xpd = NA,
cex = 1)
# LOG-SCALE
par(mar=c(4, 4, 1, 18))
if(C>0){
for (i in 1:C){
plot(x=t_ind[-(1:L)], y=c(simulated_data[-(1:L)]),  type="l", col=NA, lwd= 3, xlab="t", ylim=c(0,max(log(stan_fit$ct_impact[,,][-(1:L)]), log(stan_fit$x_hilladstocked[,,][-(1:L)]))), ylab=paste0("Control ",i))
abline(v=seq(48, length(t_ind[-(1:L)]), by=48), col="gray", lty=2)
lines(x=t_ind[-(1:L)], y=log(ct[-(1:L),i]), type = "l", col=ct_light_colors[i], lwd= 1.5)
lines(x=t_ind[-(1:L)], y=log(stan_fit$ct_impact[,,i][-(1:L)]), type = "l", col=ct_dark_colors[i], lwd= 2)
}
}
legend("right",
inset = c(-0.5, 0),  # mover hacia afuera (derecha)
legend = c(paste0("Log-Revenue attributed to Control", i), paste0("Log-Value of Control", i,"\n c[",i,"]") ),
col = c("pink", i+5),
lwd = c(2.3, 1),
lty=c(1,2),
bty = "n",
xpd = NA,
cex = 1)
# SATURATION CURVES
#######################################
x_rang<-seq(0,max(stan_fit$x_hilladstocked[,,][-(1:L)]),max(x)*0.01)
Hill<- function(x, alpha, gamma, beta=1){
beta*1/(1+ (gamma/x)^alpha)
}
par(mfrow=c(1,M),mar = c(8, 5, 5, 2))  # Increase the bottom margin (first value)
for (i in 1:M){
y_rang<-Hill(x=x_rang, beta=params_list$beta_x[i], alpha=params_list$alpha_x[i], gamma = params_list$gamma_x[i])
plot(x=x_rang, y = y_rang, type = "l", main = paste0("Saturation Hill function \n", "Media x[", i,"]"), xlab=paste0("adstock( x[", i, "] )"), ylab="Revenue", xlim=c(0, max(x_rang)), ylim=c(0,max(params_list$beta_x*1.2)), lwd=3, col=x_dark_colors[i])
abline(a = 0, b = 1, col = "brown", lwd = 2)
x_fill <- seq(par("usr")[1], par("usr")[2], length.out = 100)
y_fill <- x_fill  # Como y = x
polygon(c(x_fill, rev(x_fill)), c(y_fill, rep(par("usr")[3], length(y_fill))),
col = rgb(0.6, 0.2, 0.1, 0.5), border = NA)
abline(h=params_list$beta_x[i], col="darkgrey")
rect(min(stan_fit$x_hilladstocked[,,i][-(1:L)]), par("usr")[3], max(stan_fit$x_hilladstocked[,,i][-(1:L)]), par("usr")[4], col = rgb(0, 0, 1, 0.15), border = NA)
rect(quantile(stan_fit$x_hilladstocked[,,i][-(1:L)],probs=0.25), par("usr")[3], quantile(stan_fit$x_hilladstocked[,,i][-(1:L)],probs=0.75), par("usr")[4], col = rgb(0, 0, 1, 0.2), border = NA)
title(sub = paste0("α[", i, "] = ", params_list$alpha_x[i],
" \n ɣ[",i,"] = ", params_list$gamma_x[i],
" \n β[",i,"] = ", params_list$beta_x[i]), line = 6)
}
legend("topright",
legend=c("Inneficient Area (Adstocked < Revenue)","IQR(x)","Range(x)"),
fill = c(rgb(0.6, 0.2, 0.1, 0.5),rgb(0, 0, 1, 0.2+0.15),rgb(0, 0, 1, 0.15)),
border = c("red",NA,NA),
cex=0.75, xpd=NA)
#KPI DESGLOSADO
#################
par(mfrow=c(3,1), mar=c(4, 4, 1, 12))
# KPI + Y_signal
plot(x=t_ind[-(1:L)], y=stan_fit$Y_signal[-(1:L)],  type="l", col="black", lwd= 3, xlab="", ylim=c(0,max(x, simulated_data)), ylab="KPI + Y_signal")
abline(v=t_ind[year_marks], col="gray", lty=2)
lines(x=t_ind[-(1:L)], y=c(simulated_data[-(1:L)]),  type="l", col="red", lwd= 2)
legend("right",
inset = c(-0.27, 0),  # mover hacia afuera (derecha)
legend = c("Observed revenue \n Y", "Signal" ),
col = c("red", "black"),
lwd = 2,
lty=1,
bty = "n",
xpd = NA,
cex = 1)
# KPI + Second  Level Components PLOT
plot(x=t_ind[-(1:L)], y=stan_fit$Y_signal[-(1:L)],  type="l", col="black", lwd= 3, xlab="", ylim=c(0,max(x, simulated_data)), ylab="KPI + Second Level Components")
abline(v=t_ind[year_marks], col="gray", lty=2)
if(C>0){
lines(x=t_ind[-(1:L)], y=stan_fit$Y_control[,-(1:L)], type = "l", col="pink", lwd= 2)
}
lines(x=t_ind[-(1:L)], y=stan_fit$Y_temporal[,-(1:L)],  type="l", col="darkblue", lwd= 2)
lines(x=t_ind[-(1:L)], y=stan_fit$Y_marketing[,-(1:L)], type = "l", col="darkgreen", lwd= 2)
legend("right",
inset = c(-0.27, 0),  # mover hacia afuera (derecha)
legend = c("Signal", "Temporal effects", "Advertising effects", "Controls' effect" ),
col = c("black", "darkblue", "darkgreen", "pink"),
lwd = c(3, rep(2,3)),
lty=1,
bty = "n",
xpd = NA,
cex = 1)
# KPI + Basic Components PLOT
plot(x=t_ind[-(1:L)], y=c(simulated_data[-(1:L)]),  type="l", col="black", lwd= 3, xlab="", ylim=c(0,max(x, simulated_data)), ylab="KPI + Basic Components")
abline(v=t_ind[year_marks], col="gray", lty=2)
lines(x=t_ind[-(1:L)], y=rep(params_list$beta_0,Semanas.Efect),  type="l", col="cyan", lwd= 2)
lines(x=t_ind[-(1:L)], y=trend,  type="l", col="blue", lwd= 2)
lines(x=t_ind[-(1:L)], y=seasonal,  type="l", col="purple", lwd= 2)
for (i in 1:M){
lines(x=t_ind[-(1:L)], y=stan_fit$x_hilladstocked[,,i][-(1:L)], type = "l", col=x_dark_colors[i], lwd= 2)
}
if(C>0){
for (c in 1:sim_data$C_used){
lines(x=t_ind[-(1:L)], y=stan_fit$ct_impact[,,c][-(1:L)], type = "l", col=ct_dark_colors[c], lwd= 2)
}
}
# Y vs. Covariates
#####################
for(m in 1:M){
plot(covariateplot(Y=simulation$`y_sim[1]`, covariate = simulation[,paste0("x[",m,"]")], labelY="Y",labelcov =paste0("x[",m,"]")))
}
